apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.fabric'

apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.antonynganga.android_freckle"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:${rootProject.supportVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.constraintLayoutVersion}"
    implementation "com.android.support:design:${rootProject.supportVersion}"
    implementation "org.jetbrains.anko:anko:${rootProject.ankoVersion}"
    implementation "com.github.ajalt:timberkt:${rootProject.timberktVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.httpLogInterceptorVersion}"

    //ktlint
    ktlint "com.github.shyiko:ktlint:${rootProject.ktLintVersion}"

    //Retrofit dependencies
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.retrofitVersion}"
    implementation "com.google.code.gson:gson:${rootProject.gsonVersion}"

    // Testing dependencies
    testImplementation "junit:junit:${rootProject.junitVersion}"
    androidTestImplementation "com.android.support.test:runner:${rootProject.testRunnerVersion}"
    androidTestImplementation "com.android.support.test:rules:${rootProject.testRunnerVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.espressoVersion}"
    // androidTestImplementation "com.android.support.test.espresso:testing-support-lib:${rootProject.espressoTestingSupportVersion}"

    //App Center
    implementation "com.microsoft.appcenter:appcenter-analytics:${rootProject.appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${rootProject.appCenterSdkVersion}"

    //    Firebase
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'
}

android {
    lintOptions {
        abortOnError false
    }
}


task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
